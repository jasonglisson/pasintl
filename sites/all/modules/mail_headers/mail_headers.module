<?php
/**
 * @file
 * Mail headers main module file
 */

/**
 * Implements hook_help().
 */
function mail_headers_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mail_headers':
      // Main module help for the block module.
      return '<p>' . t('Mail Headers allows you to Limit the allowed domains for the sender e-mail address used on any e-mail sent through Drupal. You can override the value for every e-mail sent, or only for those using an address whose domain is not in the allowed list. You can change the settings in the modules @page. For the geeky ones, what we change is the "From" header in $message["headers"]["From"] and set the "Reply-To" as the original from.', array('@page' => url('admin/config/system/mail_headers'))) . '</p>';

    case 'admin/config/system/mail_headers':
      // Help for another path in the block module.
      return '<p>' . t('This page allows allows you to Limit the allowed domains for the sender e-mail address used on any e-mail sent through Drupal. You can override the value for every e-mail sent, or only for those using an address whose domain is not in the allowed list. For the geeky ones, what we change is the "From" header in $message["headers"]["From"] and set the "Reply-To" as the original from.') . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function mail_headers_permission() {
  return array(
    'administer mail headers' => array(
      'title' => t('Administer Mail Headers'),
      'description' => t('Perform administration tasks for Mail Headers.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mail_headers_menu() {
  $items['admin/config/system/mail_headers'] = array(
    'title' => 'Mail Headers',
    'page callback' => 'mail_headers_config',
    'access arguments' => array('administer mail headers'),
    'file' => 'mail_headers.admin.inc',
  );
  $items['admin/config/system/mail_headers/config'] = array(
    'title' => 'Config',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/system/mail_headers/headers'] = array(
    'title' => 'Headers',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'mail_headers_headers',
    'access arguments' => array('administer mail headers'),
    'file' => 'mail_headers.admin.inc',
  );
  $items['mail_headers/autocomplete'] = array(
    'title' => 'Mail Headers autocomplete',
    'page callback' => 'mail_headers_autocomplete',
    'access arguments' => array('administer mail headers'),
    'file' => 'mail_headers.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_mail_alter().
 *
 * We do it here and not in MailHeadersSystem::format to make it work regardless
 * of the class being used to send format the e-mails
 */
function mail_headers_mail_alter(&$message) {
  $site_mail = variable_get('site_mail', FALSE);
  $site_name = variable_get('site_name', FALSE);
  $site_name = $site_name ? mime_header_encode($site_name) : $site_mail;

  // Include user headers.
  $headers = variable_get('mail_headers_headers', array());
  foreach ($headers as $header) {
    $name = $header['header_name'];
    $value = token_replace($header['header_value'], array('sanitize' => FALSE));
    $message['headers'][$name] = $value;
  }

  // Override for all mails.
  if (variable_get('mail_headers_use_default', FALSE) && $site_mail) {
    $message['headers']['Reply-To'] = $message['headers']['X-Drupal-From'] = $message['headers']['From'];
    $message['headers']['From'] = "$site_name <$site_mail>";
    return;
  }

  // Override if not in allowed list.
  if ($patterns = variable_get('mail_headers_allowed', FALSE)) {
    // newlines.
    $to_replace = array(
      '/(\r\n?|\n)/',
    );
    $replacements = array(
      '|',
    );
    $patterns_quoted = preg_quote($patterns, '/');
    $regexps = '/@(' . preg_replace($to_replace, $replacements, $patterns_quoted) . ')$/';
    if (!preg_match($regexps, $message['from'])) {
      if ($site_mail) {
        $message['headers']['Reply-To'] = $message['headers']['X-Drupal-From'] = $message['headers']['From'];
        $message['headers']['From'] = "$site_name <$site_mail>";
      }
      else {
        drupal_set_message(t('The email couldn\'t be sent because the sender e-mail address was not in the allowed list and there is no default site mail address. You can configue the list in the !admin_page.', array('!admin_page' => l(t('Mail Header admin page'), 'admin/config/system/mail_headers'))), 'error');
        $message['to'] = $message['headers']['to'] = $message['headers']['cc'] = $message['headers']['bcc'] = FALSE;
      }
    }
  }
}

/**
 * Implements hook_element_info_alter().
 *
 * Per issue http://drupal.org/node/1667754
 * Remove #options to avoid "An illegal choice has been detected" error.
 */
function mail_headers_element_info_alter(&$type) {
  unset($type['tableform']['#options']);
}
